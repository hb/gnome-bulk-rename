#!/usr/bin/env python
#
# GNOME bulk rename utility
# Copyright (C) 2010 Holger Berndt <hb@gnome.org>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA


import sys
from optparse import OptionParser
import logging
import os

import locale
import gettext

import pygtk
pygtk.require('2.0')
import gtk

LIBDIR = '@LIBDIR@'


def _get_root_dir():
    return '/'.join(os.path.dirname(os.path.abspath(__file__)).split('/')[:-1])

def _in_devel():
    return os.path.exists(os.path.join(_get_root_dir(), '.git'))

def main(argv=None):
    
    folder = os.path.dirname(os.path.abspath(__file__))
    if _in_devel():
        root = os.path.split(folder)[0]
        localedir = os.path.join(root, 'po')
    else:
        root = os.path.join(LIBDIR, 'gnome-bulk-rename', 'python')
        localedir = "@DATADIR@/locale"

    root = os.path.join(root, "gnome-bulk-rename")
    # add gnome-bulk-rename path to python path
    if not root in sys.path:
        sys.path.insert(0, root)

    # Added for i18n
    try:
        locale.setlocale(locale.LC_ALL, '')
        locale.bindtextdomain('gnome-bulk-rename', localedir)
        locale.textdomain('gnome-bulk-rename')

        gettext.bindtextdomain('gnome-bulk-rename', localedir)
        gettext.textdomain('gnome-bulk-rename')
    except:
        print "Couldn't set locale, reverting to C locale"
    
    from gnomebulkrenameapp import GnomeBulkRenameApp, GnomeBulkRenameAppSimple
    import config

    # argument parsing
    if argv is None:
        argv = sys.argv
    parser = OptionParser(usage="%prog", version="%prog " + config.version, description="Bulk rename tool for GNOME")
    parser.add_option("-s", "--simple", action="store_true")
    (opt, args) = parser.parse_args(args=argv[1:])

    # init
    gtk.gdk.threads_init()
    
    # logging
    logdir = os.path.join(config.config_dir, "log")
    if not os.path.isdir(logdir):
        os.makedirs(logdir)
    logfilename = config.appname
    if opt.simple:
        logfilename += "-simple"
    logfile =  os.path.join(logdir, logfilename + ".log")
    logger = logging.getLogger("gnome.bulk-rename")
    logger.setLevel(logging.DEBUG)
    handler = logging.handlers.TimedRotatingFileHandler(logfile, 'D', 7, 4)
    handler.setLevel(logging.DEBUG)
    formatter = logging.Formatter("%(asctime)s %(name)s [%(levelname)s]: %(message)s")
    handler.setFormatter(formatter)
    logger.addHandler(handler)

    # start the application
    if opt.simple:
        app = GnomeBulkRenameAppSimple(args)
    else:
        app = GnomeBulkRenameApp(args)
    gtk.main()

if __name__ == "__main__":
    #sys.argv.extend(["file:///home/hb/aaaa he he ho", "file:///home/hb/Aaaa_Usb_stick_claus", "file:///home/hb/aaaa he he ho", "file:///home/hb/menu.doc"])
    #sys.argv.extend(["file:///home/hb/aaaa he he ho", "file:///home/hb/Aaaa_usb_stick_claus", "file:///home/hb/aaaa he he ho"])
    sys.argv.extend(["file:///home/hb/cycle/foo", "file:///home/hb/cycle/foobar"])
    #sys.argv.append("--simple")
    sys.exit(main(sys.argv))
